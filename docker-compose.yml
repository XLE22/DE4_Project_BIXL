services:
  server:
    container_name: server
    build:
      context: .
    ports:
      - "2025:5000"
    networks:
      - containers-net
    restart: unless-stopped
  data:
    image: app/data:1.0.0
    container_name: data
    build:
      context: .
    ports:
      - "5001:5000"
    restart: unless-stopped
    networks:
      - containers-net
    volumes:
      - data-vol:/app/data/datatourisme_poi
    command: uvicorn app.data.main:app --host 0.0.0.0 --port 5000 --reload
  database:
    image: app/database:1.0.0
    container_name: database
    build:
      context: .
    ports:
      - "5002:5000"
    restart: unless-stopped
    networks:
      - containers-net
    command: uvicorn app.database.main:app --host 0.0.0.0 --port 5000 --reload
  map:
    image: app/map:1.0.0
    container_name: map
    build:
      context: .
    ports:
      - "5003:5000"
    restart: unless-stopped
    networks:
      - containers-net
    command: uvicorn app.map.main:app --host 0.0.0.0 --port 5000 --reload
  prometheus:
    image: prom/prometheus:v2.37.9
    container_name:  prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus-vol:/prometheus
    ports:
      - "9090:9090"
    networks:
      - containers-net
    restart: unless-stopped
  grafana:
    image: grafana/grafana:9.0.6
    container_name: grafana
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning/datasources
      - grafana-vol:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    networks:
      - containers-net
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    ports:
      - "8080:8080"
    networks:
      - containers-net
    restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - "9093:9093"
    networks:
      - containers-net
    restart: unless-stopped

volumes:
  data-vol:
    driver: local
  prometheus-vol:
    driver: local
  grafana-vol:
    driver: local

networks:
  containers-net:
